#!/bin/bash

# sudo apt-get install --no-install-recommends gnupg
# mkdir -p ~/.gnupg/private-keys-v1.d
# chmod 700 ~/.gnupg/private-keys-v1.d
# gpg --full-generate-key
# gpg --armor --output key.asc --export 'email@domain.com'

email="${1}"
key="${2}"

for dist in $(ls); do
  if [ ! -d "${dist}" ]; then
    continue
  fi

  cd ${dist}

  # move all .deb files to the root of current directory
  find . -type f -name "*.deb" -exec mv '{}' ./ \;

  # remove all directories in current directory
  find . -type d -not \( -name "." -or -name ".." \) -exec rm -rf {} +

  # move all .deb files to directory with same name as package
  # create directory if it does not exist
  for deb in $(ls *.deb); do
    dir=${deb%%_*}
    if [ ! -d "${dir}" ]; then
      mkdir "${dir}"
    fi
    mv ${deb} ${dir}/
  done

  # remove old packages and release files
  rm -f Packages{,.bz2,.gz} Release{,.gpg} InRelease

  # create packages files
  apt-ftparchive packages . > Packages
  bzip2 --keep Packages
  gzip --keep Packages

  # create release files
  apt-ftparchive release . > Release
  gpg --batch --pinentry-mode=loopback --yes --default-key "${email}" --passphrase ${key} --armor --detach-sign --sign --output - Release > Release.gpg
  gpg --batch --pinentry-mode=loopback --yes --default-key "${email}" --passphrase ${key} --clearsign --output - Release > InRelease

  cd ..
done
